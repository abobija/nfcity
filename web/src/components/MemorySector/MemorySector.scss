@use 'sass:color';
@import '@/theme.scss';

$transition: .3s ease-in-out;

.memory-sector.component {
  display: flex;
  flex-direction: row;
  justify-content: right;

  >.meta {
    display: flex;
    flex-direction: column;
    font-size: 0.8rem;
    font-weight: 600;
    color: $color-4;
    transition: color $transition;

    .offset {
      padding-right: 0.3rem;
    }
  }

  >.blocks {
    display: flex;
    flex-direction: column-reverse;
    border-style: solid;
    border-color: rgba($color-fg, .2);
    border-width: 2px 1px 1px 1px;
    transition: border $transition, box-shadow $transition;
  }

  &:hover,
  &.focused {
    >.meta {
      color: $color-fg;
    }

    >.blocks {
      border-color: rgba($color-fg, .6) !important;
      box-shadow: 0 0 1rem rgba($color-fg, .1);
    }
  }
}

.memory-sector.component>.blocks {
  position: relative;
}

.memory-sector.component>.blocks .memory-sector-overlay.component {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 0.8rem;

  &.v-enter-active {
    animation: sector-overlay-in .2s;
  }

  &.v-leave-active {
    animation: sector-overlay-in .1s reverse;
  }

  @keyframes sector-overlay-in {
    0% {
      opacity: 0;
      transform: scale(.8);
    }

    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

}

.memory-sector-overlay.empty.component {
  cursor: pointer;
  color: color.adjust($color-fg, $blackness: +50%, $alpha: -0.8);
  transition: color .3s ease-in-out;

  &:hover {
    color: color.adjust($color-fg, $blackness: +50%);
  }
}

.memory-sector-overlay.unlock.component {
  form {

    label,
    input,
    button {
      font-size: 0.7rem;
    }

    input[type=text],
    button {
      padding: 0.4rem 0.5rem;
    }

    input[type=text] {
      width: 6rem;
    }

    button[type="submit"] {
      margin-left: 0.5rem;
    }
  }
}
