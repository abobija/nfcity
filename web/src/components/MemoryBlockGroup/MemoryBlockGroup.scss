@use 'sass:color';
@import '@/theme.scss';

.memory-block-group.component {
  display: flex;
  flex-direction: row;

  &:hover {
    background-color: color.adjust($color-bg, $lightness: +1%);
  }
}

.memory-block.component:not(.undefined) {
  $highlight-color: $color-1;
  $lightness: -30%;

  .memory-block-group.component:hover .memory-byte.component {
    border-bottom-color: color.adjust($highlight-color, $lightness: $lightness) !important;

    &:not(:last-child) {
      border-right-color: color.adjust($highlight-color, $lightness: $lightness);
    }
  }
}

.memory-block.component.trailer {
  .key-a {
    color: color.adjust($color-3, $hue: -35deg);
  }

  .access-bits {
    color: color.adjust($color-3, $hue: 0deg);
  }

  .user-byte {
    color: $color-4;
  }

  .key-b {
    color: color.adjust($color-3, $hue: +35deg);
  }
}

.memory-block.component.value {
  .value {
    color: $color-1;
  }

  .value-inverted {
    color: color.adjust($color-1, $blackness: 30%);
  }

  .addr {
    color: $color-2;
  }

  .addr-inverted {
    color: color.adjust($color-2, $blackness: 30%);
  }
}

.memory-block.component.data {
  color: $color-4;
}

.memory-block.component.manufacturer {
  .uid {
    color: $color-5;
  }

  .bcc {
    color: color.adjust($color-5, $hue: -40deg);
  }

  .sak {
    color: color.adjust($color-5, $hue: -70deg);
  }

  .atqa {
    color: color.adjust($color-5, $hue: -100deg);
  }

  .manufacturer {
    color: color.adjust($color-5, $hue: -130deg);
  }
}
